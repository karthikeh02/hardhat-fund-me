{
  "address": "0xEAF679eCA8329e9582eC1Be995ed04ddA98495Ce",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Fundme__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf2720ba1fb9a3701acaf29426914b8d557916b47217958607f8ac4b394b223fc",
  "receipt": {
    "to": null,
    "from": "0x329830b49B41b1f348420eECF79E1a73d8B45FB9",
    "contractAddress": "0xEAF679eCA8329e9582eC1Be995ed04ddA98495Ce",
    "transactionIndex": 65,
    "gasUsed": "998480",
    "logsBloom": "0x
    "blockHash": "0xadb0bd79ddd9a20f14661ac4a0caf02d917952f3ef20a3506d0b1f1751d8021a",
    "transactionHash": "0xf2720ba1fb9a3701acaf29426914b8d557916b47217958607f8ac4b394b223fc",
    "logs": [],
    "blockNumber": 5703807,
    "cumulativeGasUsed": "7026097",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 3,
  "solcInputHash": "a55c2cb1ee182b259b898a1801ec744a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fundme__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\n// anyone want to fund the contract\\n//only the owner can withdraw the amount\\n// for funds the minimum amnount is required in the usd\\nimport \\\"contracts/PriceConverter.sol\\\";\\n\\nerror Fundme__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConvertor for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        // single equal setting the msg.sender in owner variable\\n    }\\n\\n    function fund() public payable {\\n        // want to set min imum value in usd\\n        // 1. How do we send ETH to this contract?\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n\\n        // va denote pannuthu and then 1e18 vandhu oru 1 ETH\\n        // 1 * 10 ** 18\\n        //this 'require' keyword is a checker\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // require(msg.sender == owner,\\\"Sender is not the Owner!\\\");\\n        // double equals denote checking the variable that it has\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        s_funders = new address[](0);\\n        // actually withdraw the funds\\n\\n        //transfer\\n\\n        // msg.sender = address\\n        // payable(msg.sender) = payable address\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        //   bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //   require(sendSuccess,\\\"Send Failed\\\");\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner,\\\"Sender is not Owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert Fundme__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings cant be in memory, sorry!\\n        // inga ena panromna oru oru time um direct storage la access panname\\n        //namba ram la store panni vechikitu then ore adiya store panrom\\n        //  THIS METHOD REDUCE GAS AND IT OPTIMISE GAS\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"call Failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n    // what happens if someone sends this contract EtH without calling the fund function\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xe0a20657d074f81c27a393b4310e9530d81838bbc508a2f617b3ca25cf29738d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI -\\n        // Address - 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10);\\n\\n        // there is a technically other ways to implement this\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x64144f402dc67475c2d29a2906a2d54a69b9a5c20d2f2db1d4fd93a8e2e510f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012313803806200123183398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110b1620001806000396000818161034401528181610593015281816105e301526107d901526110b16000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac3565b6102f9565b6040516100cc9190610b09565b60405180910390f35b3480156100e157600080fd5b506100ea610342565b005b3480156100f857600080fd5b50610101610582565b60405161010e9190610b09565b60405180910390f35b34801561012357600080fd5b5061012c61058f565b6040516101399190610b33565b60405180910390f35b34801561014e57600080fd5b506101576105b7565b6040516101649190610bad565b60405180910390f35b6101756101be565b005b61017f6105e1565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bf4565b6108a5565b6040516101b59190610b33565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ec90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c7e565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028d9190610ccd565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c7576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104725760008082815481106103ec576103eb610d01565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046a90610d30565b9150506103ca565b50600067ffffffffffffffff81111561048e5761048d610d78565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600090805190602001906104d29291906109b9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f990610dd8565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610e39565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610666576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069f575b5050505050905060005b815181101561077457600082828151811061071157610710610d01565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076c90610d30565b9150506106f3565b50600067ffffffffffffffff8111156107905761078f610d78565b5b6040519080825280602002602001820160405280156107be5781602001602082028036833780820191505090505b50600090805190602001906107d49291906109b9565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081b90610dd8565b60006040518083038185875af1925050503d8060008114610858576040519150601f19603f3d011682016040523d82523d6000602084013e61085d565b606091505b50509050806108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089890610e39565b60405180910390fd5b5050565b60008082815481106108ba576108b9610d01565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108f883610928565b90506000670de0b6b3a764000085836109119190610e59565b61091b9190610eca565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190610f88565b5050509150506402540be400816109b19190611003565b915050919050565b828054828255906000526020600020908101928215610a32579160200282015b82811115610a315782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109d9565b5b509050610a3f9190610a43565b5090565b5b80821115610a5c576000816000905550600101610a44565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9082610a65565b9050919050565b610aa081610a85565b8114610aab57600080fd5b50565b600081359050610abd81610a97565b92915050565b600060208284031215610ad957610ad8610a60565b5b6000610ae784828501610aae565b91505092915050565b6000819050919050565b610b0381610af0565b82525050565b6000602082019050610b1e6000830184610afa565b92915050565b610b2d81610a85565b82525050565b6000602082019050610b486000830184610b24565b92915050565b6000819050919050565b6000610b73610b6e610b6984610a65565b610b4e565b610a65565b9050919050565b6000610b8582610b58565b9050919050565b6000610b9782610b7a565b9050919050565b610ba781610b8c565b82525050565b6000602082019050610bc26000830184610b9e565b92915050565b610bd181610af0565b8114610bdc57600080fd5b50565b600081359050610bee81610bc8565b92915050565b600060208284031215610c0a57610c09610a60565b5b6000610c1884828501610bdf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c68601283610c21565b9150610c7382610c32565b602082019050919050565b60006020820190508181036000830152610c9781610c5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd882610af0565b9150610ce383610af0565b9250828201905080821115610cfb57610cfa610c9e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3b82610af0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6d57610d6c610c9e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dc2600083610da7565b9150610dcd82610db2565b600082019050919050565b6000610de382610db5565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e23600b83610c21565b9150610e2e82610ded565b602082019050919050565b60006020820190508181036000830152610e5281610e16565b9050919050565b6000610e6482610af0565b9150610e6f83610af0565b9250828202610e7d81610af0565b91508282048414831517610e9457610e93610c9e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ed582610af0565b9150610ee083610af0565b925082610ef057610eef610e9b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1a81610efb565b8114610f2557600080fd5b50565b600081519050610f3781610f11565b92915050565b6000819050919050565b610f5081610f3d565b8114610f5b57600080fd5b50565b600081519050610f6d81610f47565b92915050565b600081519050610f8281610bc8565b92915050565b600080600080600060a08688031215610fa457610fa3610a60565b5b6000610fb288828901610f28565b9550506020610fc388828901610f5e565b9450506040610fd488828901610f73565b9350506060610fe588828901610f73565b9250506080610ff688828901610f28565b9150509295509295909350565b600061100e82610f3d565b915061101983610f3d565b925082820261102781610f3d565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561105f5761105e610c9e565b5b828205841483151761107457611073610c9e565b5b509291505056fea26469706673582212201d6881f3db18cc9cdd28626d076e0ec939aa9e72711246f231cbd373b1b40f8864736f6c63430008150033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac3565b6102f9565b6040516100cc9190610b09565b60405180910390f35b3480156100e157600080fd5b506100ea610342565b005b3480156100f857600080fd5b50610101610582565b60405161010e9190610b09565b60405180910390f35b34801561012357600080fd5b5061012c61058f565b6040516101399190610b33565b60405180910390f35b34801561014e57600080fd5b506101576105b7565b6040516101649190610bad565b60405180910390f35b6101756101be565b005b61017f6105e1565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bf4565b6108a5565b6040516101b59190610b33565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ec90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c7e565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028d9190610ccd565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c7576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104725760008082815481106103ec576103eb610d01565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046a90610d30565b9150506103ca565b50600067ffffffffffffffff81111561048e5761048d610d78565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50600090805190602001906104d29291906109b9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f990610dd8565b60006040518083038185875af1925050503d8060008114610536576040519150601f19603f3d011682016040523d82523d6000602084013e61053b565b606091505b505090508061057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690610e39565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610666576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069f575b5050505050905060005b815181101561077457600082828151811061071157610710610d01565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076c90610d30565b9150506106f3565b50600067ffffffffffffffff8111156107905761078f610d78565b5b6040519080825280602002602001820160405280156107be5781602001602082028036833780820191505090505b50600090805190602001906107d49291906109b9565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161081b90610dd8565b60006040518083038185875af1925050503d8060008114610858576040519150601f19603f3d011682016040523d82523d6000602084013e61085d565b606091505b50509050806108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089890610e39565b60405180910390fd5b5050565b60008082815481106108ba576108b9610d01565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108f883610928565b90506000670de0b6b3a764000085836109119190610e59565b61091b9190610eca565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190610f88565b5050509150506402540be400816109b19190611003565b915050919050565b828054828255906000526020600020908101928215610a32579160200282015b82811115610a315782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109d9565b5b509050610a3f9190610a43565b5090565b5b80821115610a5c576000816000905550600101610a44565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9082610a65565b9050919050565b610aa081610a85565b8114610aab57600080fd5b50565b600081359050610abd81610a97565b92915050565b600060208284031215610ad957610ad8610a60565b5b6000610ae784828501610aae565b91505092915050565b6000819050919050565b610b0381610af0565b82525050565b6000602082019050610b1e6000830184610afa565b92915050565b610b2d81610a85565b82525050565b6000602082019050610b486000830184610b24565b92915050565b6000819050919050565b6000610b73610b6e610b6984610a65565b610b4e565b610a65565b9050919050565b6000610b8582610b58565b9050919050565b6000610b9782610b7a565b9050919050565b610ba781610b8c565b82525050565b6000602082019050610bc26000830184610b9e565b92915050565b610bd181610af0565b8114610bdc57600080fd5b50565b600081359050610bee81610bc8565b92915050565b600060208284031215610c0a57610c09610a60565b5b6000610c1884828501610bdf565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c68601283610c21565b9150610c7382610c32565b602082019050919050565b60006020820190508181036000830152610c9781610c5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd882610af0565b9150610ce383610af0565b9250828201905080821115610cfb57610cfa610c9e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3b82610af0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d6d57610d6c610c9e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dc2600083610da7565b9150610dcd82610db2565b600082019050919050565b6000610de382610db5565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e23600b83610c21565b9150610e2e82610ded565b602082019050919050565b60006020820190508181036000830152610e5281610e16565b9050919050565b6000610e6482610af0565b9150610e6f83610af0565b9250828202610e7d81610af0565b91508282048414831517610e9457610e93610c9e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ed582610af0565b9150610ee083610af0565b925082610ef057610eef610e9b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1a81610efb565b8114610f2557600080fd5b50565b600081519050610f3781610f11565b92915050565b6000819050919050565b610f5081610f3d565b8114610f5b57600080fd5b50565b600081519050610f6d81610f47565b92915050565b600081519050610f8281610bc8565b92915050565b600080600080600060a08688031215610fa457610fa3610a60565b5b6000610fb288828901610f28565b9550506020610fc388828901610f5e565b9450506040610fd488828901610f73565b9350506060610fe588828901610f73565b9250506080610ff688828901610f28565b9150509295509295909350565b600061100e82610f3d565b915061101983610f3d565b925082820261102781610f3d565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561105f5761105e610c9e565b5b828205841483151761107457611073610c9e565b5b509291505056fea26469706673582212201d6881f3db18cc9cdd28626d076e0ec939aa9e72711246f231cbd373b1b40f8864736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}